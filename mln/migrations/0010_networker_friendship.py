# Generated by Django 2.1 on 2019-02-03 17:23

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations, models
import django.db.models.deletion

def migrate_triggers(apps, schema_editor):
	NMT = apps.get_model("mln", "NetworkerMessageTrigger")
	NFC = apps.get_model("mln", "NetworkerFriendshipCondition")

	for succ in NMT.objects.filter(trigger__startswith="Successful Friend Request"):
		NFC.objects.create(networker=succ.networker.strip(), condition="[import - todo]", success_body_id=succ.body_id, success_source=succ.source.strip(), failure_body=None, failure_source="[import - todo]")
	for fail in NMT.objects.filter(trigger__startswith="Unsuccessful Friend Request"):
		try:
			if fail.networker is None or fail.networker == "":
				raise ObjectDoesNotExist
			cond = NFC.objects.get(networker=fail.networker)
			cond.failure_body_id = fail.body_id
			cond.failure_source = fail.source.strip()
			cond.save()
		except ObjectDoesNotExist:
			NFC.objects.create(networker=fail.networker.strip(), condition="[import - todo]", success_body=None, success_source="[import - todo]", failure_body_id=fail.body_id, failure_source=fail.source.strip())

def reverse(apps, schema_editor):
	NFC = apps.get_model("mln", "NetworkerFriendshipCondition")
	NFC.objects.all().delete()

class Migration(migrations.Migration):
	dependencies = [
		('mln', '0009_trigger_partial'),
	]

	operations = [
		migrations.CreateModel(
			name='NetworkerFriendshipCondition',
			fields=[
				('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
				('networker', models.CharField(blank=True, max_length=64, null=True)),
				('condition', models.TextField()),
				('success_source', models.TextField()),
				('failure_source', models.TextField()),
			],
		),
		migrations.AlterModelOptions(
			name='messagebody',
			options={'ordering': ('subject', 'text'), 'verbose_name_plural': 'Message bodies'},
		),
		migrations.AddField(
			model_name='networkerfriendshipcondition',
			name='failure_body',
			field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mln.MessageBody'),
		),
		migrations.AddField(
			model_name='networkerfriendshipcondition',
			name='success_body',
			field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mln.MessageBody'),
		),
		migrations.RunPython(migrate_triggers, reverse),
	]
