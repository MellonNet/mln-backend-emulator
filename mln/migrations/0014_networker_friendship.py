# Generated by Django 2.1 on 2019-04-10 12:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mln.models.static

def migrate_conditions(apps, schema_editor):
	password = input("\n\nEnter networker password: ")
	User = apps.get_model("auth", "User")
	Profile = apps.get_model("mln", "Profile")
	ItemInfo = apps.get_model("mln", "ItemInfo")
	NFC = apps.get_model("mln", "NetworkerFriendshipCondition")
	NFCS = apps.get_model("mln", "NetworkerFriendshipConditionSource")
	for cond in NFC.objects.all():
		if cond.networker == "Echo":
			cond.networker = str(User.objects.get(username="Echo").id)
		else:
			user = User.objects.create_user(username=cond.networker, password=password)
			profile = Profile.objects.create(user=user, is_networker=True)
			cond.networker = str(user.id)
		if cond.condition == "None":
			cond.condition = None
		else:
			item = ItemInfo.objects.get(name=cond.condition)
			cond.condition = str(item.id)
		NFCS.objects.create(condition=cond, source=cond.source)
		cond.save()

class Migration(migrations.Migration):
	dependencies = [
		('mln', '0013_trigger_notes'),
	]

	operations = [
		migrations.CreateModel(
			name='NetworkerFriendshipConditionSource',
			fields=[
				('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
				('source', models.TextField()),
			],
		),
		migrations.AddField(
			model_name='networkerfriendshipconditionsource',
			name='condition',
			field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mln.NetworkerFriendshipCondition'),
		),
		migrations.AlterField(
			model_name='networkerfriendshipcondition',
			name='condition',
			field=models.CharField(max_length=64, blank=True, null=True),
		),
		migrations.RunPython(migrate_conditions),
		migrations.AlterField(
			model_name='networkerfriendshipcondition',
			name='condition',
			field=models.ForeignKey(blank=True, limit_choices_to=models.Q(('type', mln.models.static.ItemType(2)), ('type', mln.models.static.ItemType(3)), ('type', mln.models.static.ItemType(4)), ('type', mln.models.static.ItemType(6)), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='mln.ItemInfo'),
		),
		migrations.AlterField(
			model_name='networkerfriendshipcondition',
			name='networker',
			field=models.OneToOneField(settings.AUTH_USER_MODEL, related_name="friendship_condition", on_delete=django.db.models.deletion.CASCADE, limit_choices_to={"profile__is_networker": True}),
		),
		migrations.RemoveField(
			model_name='networkerfriendshipcondition',
			name='source',
		),
		migrations.AlterField(
			model_name='networkerfriendshipconditionsource',
			name='condition',
			field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='source', to='mln.NetworkerFriendshipCondition'),
		),
	]
