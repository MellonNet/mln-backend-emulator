# Generated by Django 3.2.7 on 2021-10-06 19:17

from django.db import migrations
from django.db.models import Q, ManyToManyField
import mln.models.static

def add_message_body_type(apps, schema_editor):
	# Adds MessageBodyTypes to MessageBodies, if it can
	MessageBody = apps.get_model("mln", 'MessageBody')
	MessageBodyType = mln.models.static.MessageBodyType
	NetworkerFriendshipCondition = apps.get_model("mln", "NetworkerFriendshipCondition")
	NetworkerReply = apps.get_model("mln", "NetworkerReply")

	for message_body in MessageBody.objects.all():
		if NetworkerFriendshipCondition.objects.filter(Q(success_body=message_body) | Q(failure_body=message_body)).exists():
			message_body.type = MessageBodyType.FRIEND
			message_body.save()
		elif NetworkerReply.objects.filter(template__body=message_body).exists(): 
			message_body.type = MessageBodyType.REPLY
			message_body.save()

class Migration(migrations.Migration):
	dependencies = [
		('mln', '0025_alter_networkermessagetriggerlegacy_updated'),
	]

	operations = [
		migrations.AddField(
			model_name='messagebody',
			name='type',
			field=mln.models.static.EnumField(mln.models.static.MessageBodyType, null=True, blank=True),
		),
		migrations.RunPython(add_message_body_type, reverse_code=migrations.RunPython.noop),
		migrations.AlterField(
			model_name='messagebody',
			name='easy_replies',
			field=ManyToManyField(blank=True, related_name='_mln_messagebody_easy_replies_+', to='mln.MessageBody'),
		),
	]
